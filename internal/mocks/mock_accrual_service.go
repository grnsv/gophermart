// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/grnsv/gophermart/internal/services (interfaces: AccrualService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/grnsv/gophermart/internal/models"
)

// MockAccrualService is a mock of AccrualService interface.
type MockAccrualService struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualServiceMockRecorder
}

// MockAccrualServiceMockRecorder is the mock recorder for MockAccrualService.
type MockAccrualServiceMockRecorder struct {
	mock *MockAccrualService
}

// NewMockAccrualService creates a new mock instance.
func NewMockAccrualService(ctrl *gomock.Controller) *MockAccrualService {
	mock := &MockAccrualService{ctrl: ctrl}
	mock.recorder = &MockAccrualServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualService) EXPECT() *MockAccrualServiceMockRecorder {
	return m.recorder
}

// GetAccrual mocks base method.
func (m *MockAccrualService) GetAccrual(arg0 context.Context, arg1 *models.Order) (*models.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccrual", arg0, arg1)
	ret0, _ := ret[0].(*models.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccrual indicates an expected call of GetAccrual.
func (mr *MockAccrualServiceMockRecorder) GetAccrual(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccrual", reflect.TypeOf((*MockAccrualService)(nil).GetAccrual), arg0, arg1)
}
